[global]
; The version of the AltInput syntax used by this config file
Version            = 1.2

[input1]
; This should be set to 'DirectInput'
Interface          = DirectInput
; This should be set to 'GameControl'
Class              = GameControl
; If you have multiple controllers, you can use the 'Name' attribute
; to assign an input section to a specific controller.
; To find the name you should use here, comment out this section and run
; the game with your controller plugged in, then look for a line like
; this in the debug log:
;  AltInput: Added controller 'Microsoft SideWinder Precision Pro (USB)'
; Note that you can truncate the name, in which case the input section
; will apply to any controller that contains the string below.
Name               = Microsoft SideWinder Precision Pro
; You can tell AltInput to ignore this entry altogether by uncommenting this:
;Ignore             = true
; Default dead zone of the axes, in the range 0 through 10,000, where 0
; indicates that there is no dead zone, 5,000 indicates that the dead
; zone extends over 50 percent of the physical range of the axis and 10,000
; indicates that the entire physical range of the axis is dead. For regular
; axes, the dead zone applies to the center or, for sliders, to the edges.
DeadZone           = 1000
; Factor by which to multiply an axis data, a.k.a 'sensitivity'. This can be
; overridden for each individual axis. Defaults to 1.0 if not specified.
;Factor             = 1.0
; Override the slider deadzone, as KSP seems to see the throttle as active
; even if it has a very low value (such as 1E-5).
Silder1.DeadZone   = 10
Slider1.Inverted   = true
Slider1.Factor     = 0.99
; RZ is a bit too sensitive on my old joystick...
RotationZ.DeadZone = 1500

; Mappings for each game mode. For now, these can be 'Flight', 'AltFlight'
; or 'Ground'. If no mode section is specified, 'Flight' is assumed.
[input1.Flight]
; List of axes for this controller
AxisX              = yaw
AxisY              = pitch
RotationZ          = roll
Slider1            = mainThrottle
; List of POVs for this controler
; When an axis is being used, as opposed to a button action, a number
; needs to be specified in brackets, indicating the value (-1.0 to 1.0)
; that the axis should take when this POV position is reached.
; You can also append '.Delta' if you want to specify the delta by which
; the value should be increased from its current value, instead of an
; absolute value.
POV1.Up            = Y [1.0]
POV1.Down          = Y [-1.0]
POV1.Left          = X [-1.0]
POV1.Right         = X [1.0]
; List of Buttons
Button1            = switchMode
Button2            = toggleLights
Button3            = switchView
Button4            = toggleMapView
Button5            = Z [1.0]
Button6            = Z [-1.0]
Button7            = toggleSAS
Button8            = toggleRCS
Button9            = activateStaging

; Alternate flight mode
[input1.AltFlight]
Button2            = toggleGears
Button5            = increaseWarp
Button6            = decreaseWarp
Button8            = toggleBrakes

; Controls for post landing/splashing
[input1.Ground]
AxisX              = wheelSteer
AxisX.Inverted     = true
Slider1            = wheelThrottle
Button2            = activateBrakes
Button5            = wheelThrottle.Delta [-0.1]
Button6            = wheelThrottle.Delta [0.1]
Button8            = toggleBrakes

[input2]
Interface          = DirectInput
Class              = GameControl
Name               = XBOX 360 For Windows
DeadZone           = 1000
RotationX          = yaw
RotationY          = pitch
AxisZ              = roll
POV1.Up            = Y [1.0]
POV1.Down          = Y [-1.0]
POV1.Left          = X [-1.0]
POV1.Right         = X [1.0]
Button1            = mainThrottle.Delta [-0.05]
Button2            = mainThrottle.Delta [0.05]
Button3            = Z [1.0]
Button4            = Z [-1.0]
Button5            = decreaseWarp
Button6            = increaseWarp
Button7            = switchView
Button8            = toggleMapView
Button9            = toggleLights
Button10           = toggleGears
